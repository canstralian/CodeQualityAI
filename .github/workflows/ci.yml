name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 isort pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Run flake8
        run: |
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=88 --statistics
      - name: Check imports with isort
        run: |
          isort --profile black --check-only --diff .
      - name: Test with pytest
        run: |
          pytest

  deploy:
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      # Step to check if Hugging Face space exists and create it if it doesn't
      - name: Check if Hugging Face Space exists
        id: hf_space_check
        run: |
          curl -H "Authorization: Bearer ${{ secrets.HF_TOKEN }}" \
            -s "https://huggingface.co/api/spaces/${{ secrets.HF_USERNAME }}/${{ secrets.HF_REPO_NAME }}" \
            -o response.json || echo "{}" > response.json
          if grep -q "Not Found" response.json; then
            echo "Space not found, creating it..."
            curl -X POST -H "Authorization: Bearer ${{ secrets.HF_TOKEN }}" \
              -H "Content-Type: application/json" \
              -d '{"space_id": "${{ secrets.HF_REPO_NAME }}"}' \
              "https://huggingface.co/api/spaces/${{ secrets.HF_USERNAME }}/create"
          else
            echo "Space already exists."
          fi

      - name: Deploy to Hugging Face Spaces
        uses: huggingface/huggingface-spaces-deploy-action@main
        with:
          token: ${{ secrets.HF_TOKEN }}
          space_id: ${{ secrets.HF_USERNAME }}/${{ secrets.HF_REPO_NAME }}
